//indexPlayer - indexComputer
//Th·∫Øng: 1, -2
//H√≤a: 0
//Thua c√≤n l·∫°i

// bi·∫øn count
let count = 0;

//X·ª≠ l√≠ tr√≤ ch∆°i
const itemList = [
  { id: "scissors", value: "‚úåÔ∏è" },
  { id: "rock", value: "‚úä" },
  { id: "paper", value: "ü´±" },
];

// 0: scissors
// 1: rock
// 2: paper

//B1: Cho m√°y ch·∫°y
let i = 0;
const handleChange = () => {
  // Dom t·ªõi computer
  let computer = document.querySelector("#computer");
  // Set gi√° tr·ªã
  computer.textContent = itemList[i].value;
  // Set thu·ªôc t√≠nh cho n√≥
  computer.setAttribute("data-id", itemList[i].id);
  // CƒÉn ch·ªânh i
  i = i === itemList.length - 1 ? 0 : ++i;
};
let interval = setInterval(handleChange, 100);

//B2: h√†m  compare 0: H√≤a || 1 : Th·∫Øng || -1: Thua
const compare = (valuePlayer, valueComputer) => {
  //t√¨m index c·ªßa player v√† computer
  let indexPlayer = itemList.findIndex((item) => item.id == valuePlayer);
  let indexComputer = itemList.findIndex((item) => item.id == valueComputer);
  const result = indexPlayer - indexComputer;
  if ([1, -2].includes(result)) return 1;
  else if (result == 0) return 0;
  else return -1;
};

//B3: L·∫•y index c·ªßa user v√† computer

//1.C√†i ƒë·∫∑t l·∫Øng nghe cho 3 n√∫t c·ªßa user
// Dom t·ªõi c√°c n√∫t c√≥ class user
const playerList = document.querySelectorAll(".user"); //NodeList
//Duy·ªát m·∫£ng ƒë·ªÉ c√†i ƒë·∫∑t l·∫Øng nghe
playerList.forEach((item) => {
  item.addEventListener("click", (event) => {
    //2. D·ª´ng m√°y ch·∫°y l·∫•y value c·ªßa m√°y
    //D·ª´ng ch·∫°y
    clearInterval(interval);
    // let valueComputer = document.querySelector("#computer").dataset.id;
    let valueComputer = document
      .querySelector("#computer")
      .getAttribute("data-id");
    //3. L·∫•y value c·ªßa player
    let valuePlayer = event.target.id;
    //4. so s√°nh
    let result = compare(valuePlayer, valueComputer);
    console.log(result);

    //5. Duy·ªát c√°c n√∫t  ƒë·ªÉ c√†i actived cho n√∫t ƒë√£ nh·∫•n v√† x√≥a actived cho n√∫t ƒë√£ ·∫•n tr∆∞·ªõc ƒë√≥
    //x√≥a actived v√† c√†i ƒëƒÉt kh√¥ng cho ·∫•n ƒë∆∞·ª£c n·ªØa
    playerList.forEach((_item) => {
      _item.classList.remove("actived");
      _item.style.pointerEvents = "none";
    });
    //Th√™m active cho n√∫t v·ª´a ƒë∆∞·ª£c b·∫•m
    event.target.classList.add("actived");
    //6. Th√¥ng b√°o
    let msg = "";
    let newItem = document.createElement("div");
    newItem.classList.add("alert");
    if (result == 1) {
      msg = "B·∫°n Th·∫Øng";
      newItem.classList.add("alert-success");
      count++;
    } else if (result == 0) {
      msg = "B·∫°n H√≤a";
      newItem.classList.add("alert-warning");
    } else {
      msg = "B·∫°n Thua";
      newItem.classList.add("alert-danger");
    }
    //C·∫≠p nh·∫≠t chu·ªïi th·∫Øng
    //DOM t·ªõi chain
    let chain = document.querySelector("#chain");
    chain.textContent = count;
    //Th√¥ng b√°o k·∫øt lu·∫≠n
    newItem.textContent = msg;
    document.querySelector(".notification").appendChild(newItem);
    //7. Hi·ªán n√∫t ch∆°i l·∫°i
    document.querySelector("#play-again").classList.remove("d-none");
    //8. Hi·ªán b·∫£ng modal
    if (result == -1) {
      let agreeNode = document.querySelector("#agree");
      let disagreeNode = document.querySelector("#disagree");
      let modalNode = document.querySelector(".ad_modal");
      modalNode.classList.remove("hiden");
      disagreeNode.addEventListener("click", (event) => {
        count = 0;
        chain.textContent = count;
        modalNode.classList.add("hiden");
      });
      // b·∫≠t qu·∫£ng c√°o
      agreeNode.addEventListener("click", (event) => {
        let adWindow = window.open(
          "https://www.dimtutac.com/",
          "_blank",
          "width=500,height=700"
        );
        // sau 5s th√¨ qu·∫£ng c√°o coi xong v√† back ng∆∞·ª£c l·∫°i v·ªÅ ch∆∞∆°ng tr√¨nh
        setTimeout(() => {
          //ƒê√≥ng c√°i c·ª≠a s·ªï tr√¨nh duy·ªát l·∫°i
          if (adWindow) {
            adWindow.close();
          }
          //l·∫•y l·∫°i c·ª≠a s·ªï ch√≠nh
          window.focus();
          modalNode.classList.add("hiden");
        }, 5000);
      });
    }
  });
});

//B4: C√†i ƒë·∫∑t ch∆°i l·∫°i
//Dom t·ªõi n√∫t ch∆°i l·∫°i
document.querySelector(".btn-play-again").addEventListener("click", (event) => {
  // v√¨ c√≥ bug ·∫•n l·∫°i n√∫t ch∆°i l·∫°i nhi·ªÅu l·∫ßn s·∫Ω l√†m tƒÉng t·ªëc ƒë·ªô c·ªßa thay d·ªïi c·ªßa m√°y n√™n ph·∫£i ch·∫∑n
  // C√°ch FIX: c·ª© th·∫•y ·∫•n n√∫t ch∆°i l·∫°i th√¨ vi·ªác ƒë·∫ßu ti√™n l√† x√≥a interval li·ªÅn
  clearInterval(interval);
  //sau khi x√≥a th√¨ cho m√°y ch·∫°y l·∫°i
  interval = setInterval(handleChange, 100);
  //x√≥a active c·ªßa n√∫t ƒë∆∞·ª£c ·∫•n b·∫±ng c√°ch duy·ªát
  //v√† m·ªü l·∫°i kh·∫£ nƒÉng ·∫•n n√∫t
  playerList.forEach((item) => {
    item.classList.remove("actived");
    item.style.pointerEvents = "";
  });
  // x√≥a ƒëi th√¥ng b√°o
  document.querySelector(".notification").innerHTML = "";
  // ·∫©n ƒëi n√∫t ch∆°i l·∫°i
  document.querySelector("#play-again").classList.add("d-none");
});
